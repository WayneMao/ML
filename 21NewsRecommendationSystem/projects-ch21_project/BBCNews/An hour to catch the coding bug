http://www.bbc.com/news/technology-26415021
An hour to catch the coding bug
Okay, 60 minutes and counting. Here we go.I've got an hour to convince my kids that programming is for them.Well, sort of.I'm putting my twin, 10-year-old boys, Toby and Callum, through the Hour of Code - a campaign that seeks to ignite an interest in programming - the part we're doing using specially created web-based exercises.The campaign, begun in the US, has landed in the UK where it also coincides with government calls for as many children as possible to get coding.Programming is being pushed because in an ever more technological world it can only be a good thing to give people a peep into what goes on behind the touch screen, cash point and website.The Hour of Code is supposed to be the start of that journey and I, like many other parents, feel it's one my children should be embarking on. I do feel like a clock somewhere is ticking and unless they get started with this essential skill they'll be left behind."In the future kids are going to be doing programming," said Callum when I asked him why it was worth learning how to code. "We need to learn so we can do stuff with the computer otherwise it will be a blank page and never work."It's the getting started, for both parents and their offspring, that the Hour is intended to help with. I'm probably like most parents in that I have no significant qualification in computer science. All I can offer my boys is a lifetime of tinkering backed up over the past 18 months with online courses in Python, HTML, CSS, Javascript and the like.There's good precedents for the value of something like the Hour of Code. I've quizzed every chief technology officer (CTO), developer or IT worker I've met in the past couple of weeks about what got them started and every one knew exactly the moment they got it. Their eyes lit up as they talked about typing in code listings from magazines, working through every Dos command or designing their own blocky 8-bit game characters.And, finally, at the back of my mind are all those statistics about the shortages of skilled IT staff and my hope that if this works then their future career options will be much wider than they would be without this skill.So, no pressure, then.Yesterday morning, we gave it a go. I was keen for it to be fun rather than feel like school as there's nothing more likely to turn them off than for it to be sold as good for them. I think we struck the right note of informality - Cal did it in his onesie.It went OK, no, better than that. Pretty good. We worked through all the exercises getting angry birds to mash pigs and zombies to chomp sunflowers. The coding is done by dragging blocks representing different commands into a work area and building the blocks into a tower of coherent instructions.The block-building system is based on the Scratch programming language build by MIT's Mitch Resnick.The exercises start easy - just getting an angry bird to hop on to a pig. By the end we were using "Ifâ€¦, else" statements and loops to help a zombie navigate a tricky maze to reach the sunflower.This went down well with Callum. "Cool! It's scanning for a path," he said as the zombie worked its way towards the hapless flower.Mistakes were made, but we learned from them, we debated over which way to make the birds and zombies turn and the time went really fast.Toby was surprised to find that this counted as programming."I thought coding was just a lot of people tapping in letter and numbers until they got it right," he said.And yet, I felt it was a bit too easy. I wanted to make the coding connection to real life more tangible. So, as we had about 15 minutes of our Hour of Code left, we went further.This time we used the MIT App Inventor to build a basic program that would run on the tablets they own.The app inventor uses the same "drag the block" method to build a program and following the instructions we had soon created an app that turned anything typed in text into speech.We got it working on Cal's tablet and soon they were getting that gadget to call out lots of phrases. Almost inevitably as they are 10 years old a lot of these phrases involved the words "willy" and "bum".But they had a lot of fun with it and it brought home to them how straight-forward coding can be. In just over an hour they went from being pretty much novices to creating an Android app - a basic one that trades on the expertise of the people that built the coding tools but it was an accomplishment nonetheless.Did they catch the coding bug as a result?Maybe, later in the day they were programming each other after one of their regular wrestling matches left Toby lying exhausted on the floor. Suddenly Cal called out commands such as "roll left" and Toby started obeying, even to the point of crashing into the sofa when too many roll commands were given.Then Toby had his turn and did the same, they even worked out that they had to compensate for the changes in left and right as they rolled.So, I think that hour started something. Both with them and with me. Building that Android app made me realise that it is straight-forward. That my lack of formal qualifications do not matter as much as I thought. And maybe that's the point of the hour. Making people realise that it is not scary and difficult. You just have to find an hour and give it a try. You can even do it in your onesie.